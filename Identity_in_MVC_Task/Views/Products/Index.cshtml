@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model PaginatedList<Identity_in_MVC_Task.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Объявления</h1>

<p>
    @if (SignInManager.IsSignedIn(User))
    {
        <a asp-action="Create">Создать новое объявление</a>
    }
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Поиск по имени: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type ="submit" value="Поиск" class="btn btn-dark" /> |
            <a asp-action="Index">Вернуться к полному списку</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Название товара</a>
            </th>
            
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CategorySort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Категория товара</a>
            </th>
            <th>
                Фото товара
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Цена товара</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
                <td>
                    @if (item.ProductPicture != null)
                    {
                        <img id="ProductPicture" style="width:290px;height:180px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(item.ProductPicture))">
                    }
                    else
                    {
                        <text>Фото отсутствует</text>
                    }
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price) руб.
            </td>
                @if (SignInManager.IsSignedIn(User) && item.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                {
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Изменить</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Просмотр</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
            </td>
                } else
                {
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Просмотр</a>
                    </td>
                }
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-dark @prevDisabled">
   Назад
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-dark @nextDisabled">
   Далее
</a>

